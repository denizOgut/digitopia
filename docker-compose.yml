version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: digitopia-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: digitopia-redis
    ports:
      - "6379:6379"
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: digitopia-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    container_name: digitopia-service-registry
    ports:
      - "8761:8761"
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/healtz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: digitopia-api-gateway
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=digitopia-secret-key-for-jwt-token-min-32-characters-required
    ports:
      - "8080:8080"
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healtz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: digitopia-user-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=digitopia-secret-key-for-jwt-token-min-32-characters-required
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/healtz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  organization-service:
    build:
      context: ./organization-service
      dockerfile: Dockerfile
    container_name: digitopia-organization-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/organization_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/healtz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  invitation-service:
    build:
      context: ./invitation-service
      dockerfile: Dockerfile
    container_name: digitopia-invitation-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/invitation_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - digitopia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/healtz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  digitopia-network:
    driver: bridge

volumes:
  postgres_data: